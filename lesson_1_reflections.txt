How did viewing a diff between two versions of a file help you see the bug that was introduced?
The diff command shows all the changes made in the two files and helps in finding the bug easily.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Keeping the record of every change made in the project gives us an easy way to backtrack to an earlier version of the file.
If at any point of time while developing a software we need to revert back to any version of our code we can do it by simply 
starting with that saved version.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git,
vs having versions automatically saved, like Google Docs does?
Commit:- 
pros:
1. We can save a version of a file when there is one logical change in the code.
2. We can revert back easily to any earlier version of the file.

cons:
1. If there are many logical changes per file then there will be many git commits.

Automatically saving:
pros:
1. If we forget to commit the changes in files then automatically saving is a good choice.
2. If there is a failure in the device and we have not commited our changes then automatic saving will be a good option.

cons:
1. automatic saving involves non logical commits, so in case we want to revert back to previous version of the code then 
we have to do rework on the code each time.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others,
 like Google Docs, treat each file separately?
Git allows saving multiple files in one commit because to avoid the confusion of managing files that are not changed in the commits
otherwise there will be a lot of overhead to save which file is to be commited and which to not.

How can you use the commands git log and git diff to view the history of files?
Git log commmand provides us the history of all commits with their ID and git diff gives the difference between the two commits 
and let us know the changes made to the files.

How might using version control make you more confident to make changes that could break something?
Version control stores all the previous versions of all the files when a commit is done. So if I want to do any changes in the current code
I can do it confidently because in case that changes leads to some errors in future I can revert back to any old version of the file.

Now that you have your workspace set up, what do you want to try using Git for?
I would like to try git for my android app and the apps i will make in future.